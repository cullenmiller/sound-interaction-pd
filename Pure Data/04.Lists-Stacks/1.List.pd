#N canvas 171 51 1528 841 12;
#X obj 147 -4 list append;
#X obj 337 -138 l;
#X obj 274 -137 lister;
#X text 238 -5 =;
#X text 322 -138 =;
#X obj 262 -4 list;
#X obj 617 139 bng 15 250 50 0 empty empty empty 17 7 0 10 -260097
-1 -1;
#X obj 617 186 print;
#X msg 684 135 7 8 9;
#X obj 1073 -202 list split 4;
#X msg 1099 -231 1 2 3 4 5 6 7 8;
#X obj 1075 -132 print split1;
#X obj 1114 -155 print split2;
#X obj 1154 -178 print split3;
#X msg 1045 -232 1 2 3;
#X obj 1022 95 list trim;
#X msg 1022 69 list open bag.wav 44100;
#X obj 1022 120 print;
#X msg 1088 134 list open bag.wav 44100;
#X obj 1088 186 print;
#X obj 1088 160 route list;
#X obj 584 323 list length;
#X floatatom 584 348 5 0 0 0 - - -;
#X obj 587 453 length;
#X msg 587 426 list one 2 tre;
#X floatatom 587 478 5 0 0 0 - - -;
#X obj 1113 437 list trim;
#X symbolatom 1113 386 10 0 0 0 - - -;
#X obj 1113 466 print;
#X obj 1113 411 trigger list;
#X msg 1113 358 symbol stop;
#X text 976 232 ============================================================
;
#X text 973 -15 ============================================================
;
#X text -32 -105 ============================================================
;
#X obj 497 4 prepend;
#X obj -43 -253 cnv 15 400 40 empty empty List: 20 12 0 24 -262144
-66577 0;
#X text -15 -210 The [list] object can have many functions according
to its argument \, like putting two lists together.;
#X obj 62 160 print;
#X obj 617 159 list 1 2 3;
#X msg 41 102 1 2 3;
#X msg 99 101 four five six;
#X obj 62 133 list;
#X obj 101 459 print;
#X msg 101 398 1 2 3;
#X msg 168 396 four five six;
#X obj 101 432 list 4 5 6;
#X text -16 33 A bit like the [pack] object \, [list append] will create
a list connecting any number of elements of its right inlet after any
number of elements that comes in its left inlet.;
#X obj 252 160 print;
#X obj 252 133 list;
#X msg 241 104 A;
#X msg 289 103 B;
#X text -16 345 You can also have an atom or list as an argument \,
which will be replaced by a message in the right inlet.;
#X obj 628 -104 print;
#X msg 628 -160 A B;
#X obj 628 -132 list append C;
#X obj 739 -105 print;
#X text -2 -40 The [list] object with no arguments is actually [list
append].;
#X text -17 -73 The append and prepend arguments will generate lists!
;
#X msg 133 248 1 2 3;
#X msg 24 249 four five six;
#X msg 280 246 A;
#X msg 199 246 B;
#X text -20 194 [list prepend] operates exactly the same as [list append]
\, but generate the lists in the opposite order.;
#X obj 24 312 print;
#X obj 199 307 print;
#X obj 24 285 list prepend;
#X obj 199 280 list prepend;
#X msg 739 -161 C;
#X obj 739 -133 list append A B;
#X text 483 -218 When you have a symbol atom or a list starting with
a symbol \, the implied append argument will not work \, you need to
specify the it!;
#X text 501 79 The [list] object can store lists sent to its right
inlet \, or inserted as arguments \, with the prepend and append arguments
;
#X text 476 215 ============================================================
;
#X text 515 247 The "lenght" argument gives us the list's size.;
#X msg 584 296 list one 2 3;
#X text 526 394 same as the [length] object from zexy library;
#X text 495 -55 With the append and prepend object \, [list] will generate
the "list" selector;
#X text 557 2 is a similar object that doesn't generate the "list"
selector.;
#X text 495 511 ============================================================
;
#X text 986 -96 [list split] will slice the list at the element number
specified as an argument. The first half comes out from the left outlet
\, and the second by its middle outlet.The right outlet will send out
uncut lists that are smaler than the splitting argument.;
#X text 486 51 ============================================================
;
#X text -17 -163 It's commonly used as a list storer. But the [lister]
object (from zexy) is a more proper one:;
#X text 1184 162 [route] also does that \, by the way.;
#X text 972 17 Sometimes we need to remore the "list" selector \, when
it's automatically generated by an object like [pack] \, or [list].
;
#X text 1114 96 [list trim] dos it!;
#X text -21 510 ============================================================
;
#X text 993 291 Some curiosity. Not really useful \, but curious: Let's
say you need to remove a "symbol" selector (which I bet you won't).
Convert it to a list with [trigger] \, then "trim" it.;
#X connect 6 0 38 0;
#X connect 8 0 38 1;
#X connect 9 0 11 0;
#X connect 9 1 12 0;
#X connect 9 2 13 0;
#X connect 10 0 9 0;
#X connect 14 0 9 0;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 18 0 20 0;
#X connect 20 0 19 0;
#X connect 21 0 22 0;
#X connect 23 0 25 0;
#X connect 24 0 23 0;
#X connect 26 0 28 0;
#X connect 27 0 29 0;
#X connect 29 0 26 0;
#X connect 30 0 27 0;
#X connect 38 0 7 0;
#X connect 39 0 41 0;
#X connect 40 0 41 1;
#X connect 41 0 37 0;
#X connect 43 0 45 0;
#X connect 44 0 45 1;
#X connect 45 0 42 0;
#X connect 48 0 47 0;
#X connect 49 0 48 0;
#X connect 50 0 48 1;
#X connect 53 0 54 0;
#X connect 54 0 52 0;
#X connect 58 0 65 1;
#X connect 59 0 65 0;
#X connect 60 0 66 1;
#X connect 61 0 66 0;
#X connect 65 0 63 0;
#X connect 66 0 64 0;
#X connect 67 0 68 0;
#X connect 68 0 55 0;
#X connect 73 0 21 0;
