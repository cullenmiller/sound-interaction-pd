#N canvas 1227 150 570 746 12;
#X obj 23 10 cnv 15 400 40 empty empty List-Messages: 20 12 0 24 -262144
-66577 0;
#X msg 123 200 1 2 3 4 5 6;
#X msg 255 200 10 20 30 40 50 60;
#X obj 255 351 fifop;
#X obj 255 281 list-drip;
#X obj 123 351 fifop;
#X obj 123 281 list-drip;
#X obj 158 395 *;
#X floatatom 158 423 5 0 0 0 - - -;
#X obj 72 320 trigger bang bang;
#X obj 123 136 bng 15 250 50 0 empty empty empty 17 7 0 10 -232576
-1 -1;
#X obj 72 264 length;
#X obj 72 291 until;
#X obj 123 228 t l l;
#X obj 123 164 trigger bang bang;
#X msg 158 627 10 40 90 160 250 360;
#X obj 158 510 list prepend;
#X obj 60 551 loadbang;
#X msg 60 582 set;
#X obj 41 521 bng 15 250 50 0 empty empty empty 17 7 0 10 -261682 -1
-1;
#X text -2 517 reset;
#X text 92 134 GO:;
#X obj 158 551 prepend set;
#X obj 262 539 l;
#X text 45 472 This is just for generating a list message \, as we've
seen before.;
#X text -13 443 =========================================;
#X text 274 443 =================================;
#X text 30 64 Now we also recreate the example of multiplying two lists
more dinamically with [until]. [length] gets the size of the list and
gives it to [until].;
#X connect 1 0 13 0;
#X connect 2 0 4 0;
#X connect 3 0 7 1;
#X connect 4 0 3 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 16 0;
#X connect 9 0 5 0;
#X connect 9 1 3 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 13 0 11 0;
#X connect 13 1 6 0;
#X connect 14 0 1 0;
#X connect 14 1 2 0;
#X connect 14 1 16 1;
#X connect 16 0 22 0;
#X connect 16 0 23 0;
#X connect 17 0 18 0;
#X connect 18 0 15 0;
#X connect 19 0 18 0;
#X connect 22 0 15 0;
#X connect 23 0 16 1;
