#N canvas 121 208 1746 859 12;
#X obj 33 -18 cnv 15 400 40 empty empty While: 20 12 0 24 -262144 -66577
0;
#X text 72 188 Thus \, we can have something like:;
#X text 125 236 While x is different than 7 \, do something.;
#X obj 171 490 random 12;
#X obj 171 536 != 7;
#X obj 171 576 sel 0 1;
#X obj 171 448 until;
#X obj 194 620 bng 15 250 50 0 empty empty empty 17 7 0 10 -204800
-1 -1;
#X msg 171 413 bang;
#X obj 194 652 print;
#X text 60 55 ============================================================
;
#X text 73 701 ============================================================
;
#X text 227 413 While x != 7;
#X text 229 617 "Do Something";
#X text 72 104 Besides "for" \, another similar looping concept is
"While". And \, in a similar fashion to for \, it also does something
while a condition is not met (or "until" it is not met).;
#X text 78 290 And we can set a variable update of x that is not constant
\, and depends on whatever funcion is part of the processs. In this
example \, we'll use a random number generator \, so the variable is
true (that is \, equal to 7) at a different number of iterations each
time the process is triggered.;
#X obj 579 87 until;
#X msg 579 22 bang;
#X obj 660 184 + 1;
#X msg 653 101 0;
#X obj 579 56 t bang bang;
#X obj 579 172 float;
#X obj 579 202 t f f;
#X text 747 208 array size;
#X obj 660 211 select 1000;
#N canvas 0 22 450 300 (subpatch) 0;
#X array array1 1000 float 5;
#A 0 -0.771434 -0.767624 -0.763815 -0.760005 -0.756195 -0.752386 -0.748576
-0.744767 -0.740957 -0.737148 -0.733338 -0.729528 -0.725719 -0.721909
-0.7181 -0.71429 -0.710719 -0.707147 -0.703576 -0.700004 -0.696433
-0.692861 -0.68929 -0.685719 -0.682147 -0.678576 -0.675004 -0.671433
-0.667861 -0.66429 -0.660718 -0.657147 -0.653575 -0.650004 -0.646433
-0.642861 -0.637147 -0.631432 -0.625718 -0.620004 -0.614289 -0.608575
-0.602861 -0.597147 -0.591432 -0.585718 -0.581206 -0.576695 -0.572184
-0.567673 -0.563161 -0.55865 -0.554139 -0.549627 -0.545116 -0.540605
-0.536093 -0.531582 -0.527071 -0.52256 -0.518048 -0.513537 -0.509026
-0.504514 -0.500003 -0.497146 -0.494289 -0.491431 -0.488574 -0.485717
-0.48286 -0.480003 -0.477146 -0.474289 -0.471431 -0.468574 -0.465717
-0.46286 -0.460003 -0.457146 -0.454288 -0.451431 -0.448574 -0.445717
-0.44286 -0.440574 -0.438288 -0.436002 -0.433717 -0.431431 -0.429145
-0.42686 -0.424574 -0.422288 -0.420002 -0.417717 -0.415431 -0.413145
-0.41086 -0.408574 -0.408574 -0.408574 -0.408574 -0.408574 -0.408574
-0.408574 -0.408574 -0.408574 -0.408574 -0.408574 -0.408574 -0.408574
-0.408574 -0.408574 -0.408574 -0.40786 -0.407145 -0.406431 -0.405717
-0.405003 -0.404288 -0.403574 -0.40286 -0.402145 -0.401431 -0.400717
-0.400003 -0.399288 -0.398574 -0.39786 -0.397146 -0.396431 -0.395717
-0.395003 -0.394288 -0.393574 -0.39286 -0.392145 -0.391431 -0.390717
-0.390003 -0.389288 -0.388574 -0.38786 -0.387146 -0.386431 -0.385717
-0.385003 -0.384288 -0.383574 -0.38286 -0.382146 -0.381431 -0.380717
-0.380003 -0.37886 -0.377717 -0.376575 -0.375432 -0.374289 -0.373146
-0.372003 -0.37086 -0.369717 -0.368575 -0.367432 -0.366289 -0.365146
-0.364003 -0.36286 -0.361717 -0.360575 -0.359432 -0.358289 -0.357146
-0.356003 -0.35486 -0.353717 -0.352575 -0.351432 -0.35086 -0.350289
-0.349718 -0.349146 -0.348575 -0.348003 -0.347432 -0.34686 -0.346289
-0.345718 -0.345146 -0.344575 -0.344003 -0.343432 -0.34286 -0.342289
-0.341718 -0.341146 -0.340575 -0.340003 -0.339432 -0.33886 -0.338289
-0.337718 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146
-0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146
-0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146
-0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146 -0.337146
-0.337146 -0.337146 -0.337146 -0.337147 -0.336738 -0.33633 -0.335922
-0.335514 -0.335106 -0.334698 -0.334289 -0.333881 -0.333473 -0.333065
-0.0591869 -0.0591869 -0.0591869 -0.0591869 -0.0591869 -0.0591869 -0.0577583
-0.0563297 -0.0549011 -0.0534726 -0.052044 -0.0506154 -0.0491868 -0.0477582
-0.0463297 -0.0449011 -0.0434725 -0.0420439 -0.0406153 -0.0391868 -0.0377582
-0.0363296 -0.034901 -0.0334724 -0.0320438 -0.0306153 -0.0291867 -0.0277581
-0.0263295 -0.0249009 -0.0234724 -0.0220438 -0.0206152 -0.0191866 -0.017758
-0.0163295 -0.0163295 -0.0163295 -0.0163295 -0.0163295 0.0265279 0.0293851
0.0322422 0.0350994 0.0379566 0.0408137 0.0436709 0.046528 0.0493852
0.0522424 0.0550995 0.0579567 0.0608138 0.063671 0.0665282 0.0693853
0.0722425 0.0750997 0.0779568 0.080814 0.0836712 0.0836712 0.0836712
0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712
0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712
0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712
0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712 0.0836712
0.0836712 0.0836712 0.0836712 0.0836712 0.0836711 0.0844503 0.0852296
0.0860088 0.086788 0.0875672 0.0883465 0.0891257 0.0899049 0.0906841
0.0914634 0.0922426 0.0930218 0.0938011 0.0945803 0.0953595 0.0961387
0.096918 0.0976972 0.0984764 0.0992556 0.100035 0.100814 0.101593 0.102373
0.103152 0.103931 0.10471 0.105489 0.106269 0.107048 0.107827 0.108606
0.109386 0.110165 0.110944 0.111723 0.112502 0.113282 0.114061 0.11484
0.115619 0.116399 0.117178 0.117957 0.118736 0.119516 0.120295 0.121074
0.121853 0.122632 0.123412 0.124191 0.12497 0.125749 0.126529 0.128161
0.129794 0.131427 0.133059 0.134692 0.136325 0.137957 0.13959 0.141223
0.142855 0.144488 0.146121 0.147753 0.149386 0.151019 0.152651 0.154284
0.155917 0.157549 0.159182 0.160815 0.162447 0.16408 0.165713 0.167345
0.168978 0.17061 0.172243 0.173876 0.175508 0.177141 0.178774 0.180406
0.182039 0.183672 0.184942 0.186212 0.187481 0.188751 0.190021 0.191291
0.192561 0.193831 0.1951 0.19637 0.19764 0.19891 0.20018 0.20145 0.20272
0.203989 0.205259 0.206529 0.207799 0.209069 0.210339 0.211608 0.212878
0.214148 0.215418 0.216688 0.217958 0.219228 0.220497 0.221767 0.223037
0.224307 0.225577 0.226847 0.228117 0.229386 0.230656 0.231926 0.233196
0.234466 0.235736 0.237005 0.238275 0.239545 0.240815 0.242244 0.243672
0.245101 0.246529 0.247958 0.249387 0.250815 0.252244 0.253672 0.255101
0.256529 0.257958 0.259387 0.260815 0.262244 0.263672 0.265101 0.266529
0.267958 0.269387 0.271101 0.272815 0.27453 0.276244 0.277958 0.279673
0.281387 0.283101 0.284815 0.28653 0.288244 0.289958 0.291673 0.293387
0.295101 0.296815 0.29853 0.300244 0.301958 0.303673 0.305387 0.307101
0.308815 0.31053 0.312244 0.313196 0.314149 0.315101 0.316053 0.317006
0.317958 0.318911 0.319863 0.320815 0.321768 0.32272 0.323673 0.324625
0.325577 0.32653 0.327482 0.328434 0.329387 0.330339 0.331292 0.332244
0.333196 0.334149 0.335101 0.336054 0.337006 0.337958 0.338911 0.339863
0.340816 0.342244 0.343673 0.345101 0.34653 0.347959 0.349387 0.350816
0.352244 0.353673 0.355101 0.356054 0.357006 0.357958 0.358911 0.359863
0.360816 0.361768 0.36272 0.363673 0.364625 0.365578 0.36653 0.367482
0.368435 0.369387 0.37034 0.371292 0.372244 0.373197 0.374149 0.375101
0.376054 0.377006 0.377959 0.378911 0.379863 0.380816 0.381768 0.382721
0.383673 0.385578 0.387482 0.389387 0.391292 0.393197 0.395102 0.397006
0.398911 0.400816 0.402721 0.404625 0.40653 0.408435 0.41034 0.412245
0.413197 0.414149 0.415102 0.416054 0.417006 0.417959 0.418911 0.419864
0.420816 0.421768 0.422721 0.423673 0.424626 0.425578 0.42653 0.428435
0.43034 0.432245 0.434149 0.436054 0.437959 0.439864 0.441769 0.443673
0.445578 0.447483 0.449388 0.451292 0.453197 0.455102 0.457007 0.458911
0.460816 0.462721 0.464626 0.466531 0.468435 0.47034 0.472245 0.47415
0.476054 0.477959 0.479864 0.481769 0.483673 0.485578 0.487483 0.489388
0.491293 0.493197 0.495102 0.497007 0.498912 0.500817 0.502721 0.504626
0.506531 0.508436 0.51034 0.512245 0.51415 0.516055 0.517959 0.519864
0.521769 0.523674 0.525579 0.527483 0.529388 0.531293 0.533198 0.535102
0.537007 0.538912 0.540817 0.540817 0.540817 0.540817 0.540817 0.540817
0.543674 0.546531 0.549388 0.552246 0.555103 0.55796 0.560817 0.563674
0.566531 0.569389 0.572246 0.575103 0.57796 0.580817 0.583674 0.586531
0.589389 0.592246 0.595103 0.59796 0.600817 0.603674 0.606532 0.609389
0.612246 0.615103 0.61796 0.620817 0.623675 0.626531 0.62796 0.629389
0.630817 0.632246 0.633674 0.635103 0.636532 0.63796 0.639389 0.640818
0.643675 0.646532 0.649389 0.652246 0.655103 0.656532 0.65796 0.659389
0.660817 0.662246 0.663675 0.665103 0.666532 0.66796 0.669389 0.672246
0.675103 0.677961 0.680818 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675 0.683675
0.683675 0.683675 0.683675 0.683675 0.680818 0.677961 0.675103 0.672246
0.669389 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904 -0.144904
-0.144904 -0.144904 -0.144904 -0.144904 -0.147761 -0.150618 -0.153475
-0.156332 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189
-0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189
-0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189
-0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189 -0.159189
-0.159189 -0.159189 -0.159189 -0.159189 -0.162046 -0.164903 -0.16776
-0.170618 -0.173475 -0.173475 -0.173475 -0.173475 -0.173475 -0.173475
-0.173475 -0.173475 -0.173475 -0.173475 -0.173475 -0.174903 -0.176332
-0.17776 -0.179189 -0.180617 -0.182046 -0.183475 -0.184903 -0.186332
-0.18776 -0.18776 -0.18776 -0.18776 -0.18776 -0.18776 -0.18776 -0.18776
-0.18776 -0.18776 -0.18776 -0.365717 -0.365717 -0.365717 -0.365717
-0.408574;
#X coords 0 1 999 -1 200 140 1;
#X restore 905 143 graph;
#X text 713 8 You can have more than one condition to stop the loop.
In the next example we are sweeping through an array while the value
is under or equal to 0.94 \, but we also have another condition that
will keep the loop running only while the index is smaller than the
array size (or "until" it reaches the end of the array).;
#X obj 1316 290 Uzi;
#X msg 1316 259 1000;
#X obj 651 353 float;
#X obj 651 319 sel 1;
#X obj 1334 373 sel 1;
#X obj 1334 321 expr array1[$f1-1] >= 0.94 \; $f1 -1;
#X obj 1334 403 float;
#X floatatom 1334 436 5 0 0 0 - - -;
#X text 1375 435 index;
#X text 1307 500 all indexes that meet the condition;
#X text 740 391 1st index to meet the condition;
#X text 647 707 ============================================================
;
#X text 617 -22 ============================================================
;
#X obj 651 393 print Fist;
#X obj 1334 468 print All;
#X obj 767 594 sel 1;
#X obj 642 535 until;
#X obj 767 621 f;
#X msg 642 470 bang;
#X msg 716 531 0;
#X obj 695 607 + 1;
#X obj 642 599 f;
#X obj 642 504 trigger b b;
#X text 643 429 ============================================================
;
#X obj 767 682 print 1st;
#X text 769 492 that is built-in the [expr] object;
#X text 1247 175 The a fundamental key difference to [Uzi] is that
it will always send a specified number of bangs. You can't stop it!
In other words \, it doesn't care about While!;
#X text 844 682 1st index to meet the condition;
#X obj 767 650 moses 1000;
#X obj 651 275 expr array1[$f1] >= 0.94 \; $f1;
#X obj 767 547 expr array1[$f1] >= 0.94 || $f1 > 999 \; $f1;
#X obj 660 240 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 675 235 condition not met;
#X obj 851 659 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 872 657 condition not met;
#X floatatom 604 394 5 0 0 0 - - -;
#X text 1219 131 Meanwile \, in [Uzi]...;
#X text 892 295 click & scroll to change values;
#X text 702 467 A simpler way to code this having the "||" (or) function
;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 1;
#X connect 5 1 7 0;
#X connect 6 0 3 0;
#X connect 7 0 9 0;
#X connect 8 0 6 0;
#X connect 16 0 21 0;
#X connect 17 0 20 0;
#X connect 18 0 21 1;
#X connect 18 0 24 0;
#X connect 19 0 21 1;
#X connect 20 0 16 0;
#X connect 20 1 19 0;
#X connect 21 0 22 0;
#X connect 22 0 18 0;
#X connect 22 1 56 0;
#X connect 24 0 16 1;
#X connect 24 0 58 0;
#X connect 27 2 32 0;
#X connect 28 0 27 0;
#X connect 29 0 62 0;
#X connect 29 0 40 0;
#X connect 30 0 16 1;
#X connect 30 0 29 0;
#X connect 31 0 33 0;
#X connect 32 0 31 0;
#X connect 32 1 33 1;
#X connect 33 0 34 0;
#X connect 34 0 41 0;
#X connect 42 0 43 1;
#X connect 42 0 44 0;
#X connect 43 0 48 0;
#X connect 44 0 55 0;
#X connect 45 0 49 0;
#X connect 46 0 48 1;
#X connect 47 0 48 1;
#X connect 48 0 47 0;
#X connect 48 0 57 0;
#X connect 49 0 43 0;
#X connect 49 1 46 0;
#X connect 55 0 51 0;
#X connect 55 1 60 0;
#X connect 56 0 30 0;
#X connect 56 1 29 1;
#X connect 57 0 42 0;
#X connect 57 1 44 1;
